---
interface Props {
  position?: "center" | "right" | "left";
}

const { position = "right"} = Astro.props;
---

<div id="chart-line"></div>

<script>
  import ApexCharts from "apexcharts";
  import { apiController } from '../scripts/request.js';
  import {obtenerCookie, getQueryParam, obtenerNombreDelMes} from "../scripts/utils.js";

  function optionConfig(totales, category, title){
    return  {
          series: [
              {
                  name: "Controles Emitidos",
                  data: totales,
                  fill: {
                      type: "gradient",
                      gradient: {
                          shade: "dark",
                          type: "horizontal",
                          shadeIntensity: 1,
                          opacityFrom: 1,
                          opacityTo: 1,
                          stops: [0, 100, 100, 100],
                          gradientToColors: ["#8f64a9"],
                      },
                  },
              },
          ],
          colors: ["#e2cf41", '#8f64a9'],
          chart: {
              height: 300,
              type: "bar",
          },
          forecastDataPoints: {
              count: 7,
          },
          stroke: {
              width: 5,
              curve: "smooth",
          },
          markers: {
              discrete: [{
                  seriesIndex: 1,
                  dataPointIndex: 7,
                  fillColor: '#eee',
                  strokeColor: '#8f64a9',
                  size: 15,
                  shape: "circle" // "circle" | "square" | "rect"
              }, {
                  seriesIndex: 1,
                  dataPointIndex: 11,
                  fillColor: '#eee',
                  strokeColor: '#8f64a9',
                  size: 15,
                  shape: "circle" // "circle" | "square" | "rect"
              }]
          },
          xaxis: {
              type: "category",
              categories: category,
              tickAmount: 10,
              labels: {
                  //formatter: function (value, timestamp, opts) {
                    //return convertirMesInglesAEspanol(moment(new Date(timestamp)).locale('es').format('DD MMM'));
                  //},
              },
          },
          title: {
              text: title,
              align: "left",
              style: {
                  fontSize: "16px",
                  color: "#666",
              },
          },
          fill: {
              type: "gradient",
              gradient: {
                  shade: "dark",
                  gradientToColors: ["#d56c5f"],
                  shadeIntensity: 1,
                  type: "horizontal",
                  opacityFrom: 1,
                  opacityTo: 1,
                  stops: [0, 100, 100, 100],
              },
          },
          yaxis: {},
      };
  }


  async function init() {
    if (document.getElementById("chart-line") && typeof ApexCharts !== 'undefined') {

      let cliente_id = getQueryParam('c');
      var cookies = obtenerCookie('others');
      var objeto = JSON.parse(cookies);

      let fechaActual = new Date(); // obtiene la fecha y hora actual
      let year = fechaActual.getFullYear(); // obtiene el año actual
      let month = fechaActual.getMonth() + 1; // obtiene el mes actual (0-11, por lo que añadimos 1)
      
      const title = "Cant. Nº Control Semanal ("+ obtenerNombreDelMes(month)+")";

      //renderizar todo vacio por primera vez
      let chart = new ApexCharts(document.querySelector("#chart-line"), optionConfig([0, 0, 0, 0, 0], ['~', '~', '~', '~', '~'], title));
      chart.render();

      var clase_chart_1 = `chart_1_${cliente_id}`;
      var storageName_chart_1 = `total_${clase_chart_1}`;
      var storageName_category_chart_1 = `category_${clase_chart_1}`;
      const cache_total_chart_1 = localStorage.getItem(storageName_chart_1);
      const cache_category_chart_1 = localStorage.getItem(storageName_category_chart_1);
      
      if (cache_total_chart_1 && cache_category_chart_1) {
        chart.updateOptions(optionConfig(JSON.parse(cache_total_chart_1), JSON.parse(cache_category_chart_1), title));
      }else{
        localStorage.setItem(storageName_chart_1, JSON.stringify([0, 0, 0, 0, 0]));
        localStorage.setItem(storageName_category_chart_1, JSON.stringify(['~', '~', '~', '~', '~']));
        chart.updateOptions(optionConfig([0, 0, 0, 0, 0], ['~', '~', '~', '~', '~'], title));
      }

      //el 0 adelante de consumo api ayuda para que no salga la fecha completa y salga abreviado ejemplo: 04~05
      const responseData = await apiController(import.meta.env.PUBLIC_BASE_URL,`/consultasCliente/${cliente_id}/getTotalEmitidosSemanal/${year}/0${month}`,'GET',null,objeto.token);
      localStorage.setItem(storageName_chart_1, JSON.stringify(Object.values(responseData.data)));
      localStorage.setItem(storageName_category_chart_1, JSON.stringify(Object.keys(responseData.data)));
      chart.updateOptions(optionConfig(Object.values(responseData.data),Object.keys(responseData.data), title));
      
    }
  }

  // Inicializar en la primera carga
  init();

  // Reinicializar después de cambiar de página
  document.addEventListener("astro:after-swap", init);
</script>
