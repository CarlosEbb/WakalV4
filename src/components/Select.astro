---
import { Icon } from 'astro-icon/components'

interface Props {
    name: string;
	id?: string;
	rounded?: 'rounded-full' | 'rounded-r-full' | 'rounded-l-full';
	addClass?: string;
	icon?: string;
    addWith?: 'w-full' | 'w-auto';
    multiple?: boolean;
    disabled?: boolean;
}

const {id, name, rounded = '', addClass = '', icon = '', addWith = "w-full", multiple = false, disabled = false} = Astro.props;

---

<div class=`w-full inline-flex items-center bg-custom-quaternary select-container ${rounded} ${addClass}`>
    {icon !== '' &&
        <Icon name={icon}  class=" left-0  pointer-events-none ml-3 text-custom-primary" />
    }
    
    <select id={id} name={name} class=`${addWith} py-2.5 text-sm text-gray-600 bg-custom-quaternary text-custom-select border-none focus:outline-none focus:ring-0 ${rounded}` multiple={multiple} disabled={disabled}>
        <slot />
    </select>
</div>

<script>
    // Obtener todos los elementos con la clase select-container
    const selectContainers = document.querySelectorAll('.select-container');

    selectContainers.forEach(element => {
        element.addEventListener('mousedown', select_click);
    });

    function select_click(event) {
        // Buscar el elemento select hijo del contenedor actual
        const select = event.currentTarget.querySelector('select');
        // Activar el foco en el elemento select
        select.focus();
    }
</script>