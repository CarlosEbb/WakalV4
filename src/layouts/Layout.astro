---
import  { ViewTransitions }  from 'astro:transitions';
import Sidebar from "../components/Sidebar.astro";
import Navbar from "../components/Navbar.astro";
import Head from "./includes/Head.astro";
import SearchBar from "../components/SearchBar.astro";

interface Props {
	title: string;
	subTitle?: string;
	bodyClass?: string;
	isSearchBar?: boolean;
}
const locals:any = Astro.locals;

const { title, subTitle = 'Seleccione su consulta', bodyClass = '', isSearchBar = true} = Astro.props;
---

<!doctype html>
<html lang="en">
	<Head title={title} />
	<body class={bodyClass}>
		<div id="loading-screen" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 hidden z-50">
			<div class="loader border-8 border-gray-300 border-solid rounded-full w-16 h-16"></div>
		</div>
		  
		<div class="flex">
			<div>
				<Sidebar locals={locals} />
			</div>
			<div class="flex-grow">
				<div  class="h-full bg-custom-quaternary transition-all duration-300">
					<Navbar />
					<SearchBar isSearchBar={isSearchBar} subTitle={subTitle}/>
					<slot />
				</div>
			</div>
		</div>
		
		<slot name="toast" />
	
		<script>
			import { initFlowbite } from 'flowbite'
			import tippy from 'tippy.js';
			import 'tippy.js/dist/tippy.css'; // optional for styling

			import {obtenerCookie, getQueryParam} from "../scripts/utils.js";
			
			var cookies = obtenerCookie('others');
			var objeto = JSON.parse(cookies);
			
			// import { createTour } from '../scripts/tour.js';
			// let stepsJson = [
			// {
			// 	ruta: "/dashboard/clientes/home",
			// 	tour: [{
			// 	title: "Mi primer paso",
			// 	text: "Este es el primer paso de nuestro tour!",
			// 	element: ".card_chart_1"
			// 	},
			// 	{
			// 	title: "Mi segundo paso",
			// 	text: "Este es el segundo paso de nuestro tour!",
			// 	element: ".card_chart_2"
			// 	}]
			// },
			// {
			// 	ruta: "/dashboard/clientes",
			// 	tour: [
			// 	{
			// 		title: "Mi primer paso",
			// 		text: "Este es el primer paso de nuestro tour!",
			// 		element: ".card_table"
			// 	}
			// 	]
			// }
			
			// ];
			
			

			function init() {
				tippy('[data-tippy-content]');
				initFlowbite();
				// if(objeto.is_tour == "1"){
				// 	createTour(stepsJson);
				// }
			}

			// Inicializar en la primera carga
			init();

			// Reinicializar después de cambiar de página
			document.addEventListener("astro:after-swap", init);
		</script>
		{!import.meta.env.PUBLIC_BASE_URL.includes('localhost') &&
			<script is:inline src='https://cdn.jsdelivr.net/npm/kore-web-sdk@11.4.0/dist/umd/kore-web-sdk-umd-chat.min.js'></script>
			<script is:inline>
				KoreChatSDK.chatConfig.botOptions.API_KEY_CONFIG.KEY = '98556fdd73f54a68b6541d4e1da541e82931cf3d42e444c684d10e3d4e5fcd6astcc';
				KoreChatSDK.chatConfig.enableThemes = true; 
				new KoreChatSDK.chatWindow().show(KoreChatSDK.chatConfig);
			</script>
		}
	</body>
</html>
<script>
	import {getIpClient} from "../scripts/utils.js";
	getIpClient();
</script>